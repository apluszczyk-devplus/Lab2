<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="About content 1" xml:space="preserve">
    <value>...und das ist mein Foto. Ich bin geschminkt, damit ich machen kann, was ich will. Im Moment stehe ich neben dem Text und lächle.</value>
  </data>
  <data name="About content 2" xml:space="preserve">
    <value>Meine Lieblingsbeschäftigung ist das Imitieren. Im Moment verkörpere ich Jan Kowalski... Du wirst nie wissen, wer ich wirklich bin</value>
  </data>
  <data name="About title" xml:space="preserve">
    <value>Mein Name ist Jan Kowalski...</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="Back to list" xml:space="preserve">
    <value>Zurück zur Liste</value>
  </data>
  <data name="Birth date" xml:space="preserve">
    <value>Geburtstag</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Buch</value>
  </data>
  <data name="Book details" xml:space="preserve">
    <value>Buchdetails</value>
  </data>
  <data name="Books" xml:space="preserve">
    <value>Bücher</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Klient</value>
  </data>
  <data name="Client details" xml:space="preserve">
    <value>Kundendaten</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Kunden</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Land</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="Create book" xml:space="preserve">
    <value>Buch erstellen</value>
  </data>
  <data name="Create client" xml:space="preserve">
    <value>Kunden erstellen</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Delete book" xml:space="preserve">
    <value>Buch löschen</value>
  </data>
  <data name="Delete client" xml:space="preserve">
    <value>Kunden löschen</value>
  </data>
  <data name="Delete confirmation" xml:space="preserve">
    <value>Möchten Sie dies wirklich löschen?</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Einzelheiten</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="Edit book" xml:space="preserve">
    <value>Buch bearbeiten</value>
  </data>
  <data name="Edit client" xml:space="preserve">
    <value>Kunden bearbeiten</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Field required" xml:space="preserve">
    <value>Pflichtfeld</value>
  </data>
  <data name="First name" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="Future date not allowed" xml:space="preserve">
    <value>Zukünftiges Datum ist nicht zulässig</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hallo</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Zuhause</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Identifikation</value>
  </data>
  <data name="Invalid date format" xml:space="preserve">
    <value>Ungültiges Datumsformat</value>
  </data>
  <data name="Invalid email" xml:space="preserve">
    <value>Diese E-Mail-Adresse ist ungültig</value>
  </data>
  <data name="Last name" xml:space="preserve">
    <value>Nachname</value>
  </data>
  <data name="Learn End" xml:space="preserve">
    <value>über die Erstellung von mvc .net Core-Apps</value>
  </data>
  <data name="Learn Start" xml:space="preserve">
    <value>Lernen</value>
  </data>
  <data name="Phone number" xml:space="preserve">
    <value>Telefonnummer</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privatsphäre</value>
  </data>
  <data name="Privacy Policy" xml:space="preserve">
    <value>Datenschutz-Bestimmungen</value>
  </data>
  <data name="Privacy Policy Content" xml:space="preserve">
    <value>Dies ist keine Datenschutzerklärung :)</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Bewertung</value>
  </data>
  <data name="Release date" xml:space="preserve">
    <value>Veröffentlichungsdatum</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Second name" xml:space="preserve">
    <value>Zweitname</value>
  </data>
  <data name="Text max 30" xml:space="preserve">
    <value>Text darf nicht länger als 30 Zeichen sein</value>
  </data>
  <data name="Text max 50" xml:space="preserve">
    <value>Text darf nicht länger als 50 Zeichen sein</value>
  </data>
  <data name="Text max 60" xml:space="preserve">
    <value>Text darf nicht länger als 60 Zeichen sein</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titel</value>
  </data>
  <data name="Zero to ten allowed" xml:space="preserve">
    <value>Zulässige Werte zwischen 0 und 10</value>
  </data>
</root>